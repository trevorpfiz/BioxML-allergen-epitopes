import type { Options } from "@hey-api/client-fetch";
import { createClient, createConfig } from "@hey-api/client-fetch";

import type {
  HealthCheckError,
  HealthCheckResponse2,
  JobCreateJobData,
  JobCreateJobError,
  JobCreateJobResponse,
  JobDeleteJobData,
  JobDeleteJobError,
  JobDeleteJobResponse,
  JobGetJobData,
  JobGetJobError,
  JobGetJobResponse,
  JobGetUserJobsError,
  JobGetUserJobsResponse,
  JobUpdateJobData,
  JobUpdateJobError,
  JobUpdateJobResponse,
  PredictionCreateConformationalBpredictionData,
  PredictionCreateConformationalBpredictionError,
  PredictionCreateConformationalBpredictionResponse,
} from "./types.gen";
import {
  JobCreateJobResponseTransformer,
  JobDeleteJobResponseTransformer,
  JobGetJobResponseTransformer,
  JobGetUserJobsResponseTransformer,
  JobUpdateJobResponseTransformer,
  PredictionCreateConformationalBpredictionResponseTransformer,
} from "./types.gen";

// This file is auto-generated by @hey-api/openapi-ts

export const client = createClient(createConfig());

/**
 * Check
 * Secured health check endpoint.
 */
export const healthCheck = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    HealthCheckResponse2,
    HealthCheckError,
    ThrowOnError
  >({
    ...options,
    url: "/api/v1/health",
  });
};

/**
 * Get User Jobs
 */
export const jobGetUserJobs = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    JobGetUserJobsResponse,
    JobGetUserJobsError,
    ThrowOnError
  >({
    ...options,
    url: "/api/v1/job/",
    responseTransformer: JobGetUserJobsResponseTransformer,
  });
};

/**
 * Create Job
 */
export const jobCreateJob = <ThrowOnError extends boolean = false>(
  options: Options<JobCreateJobData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    JobCreateJobResponse,
    JobCreateJobError,
    ThrowOnError
  >({
    ...options,
    url: "/api/v1/job/",
    responseTransformer: JobCreateJobResponseTransformer,
  });
};

/**
 * Update Job
 */
export const jobUpdateJob = <ThrowOnError extends boolean = false>(
  options: Options<JobUpdateJobData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    JobUpdateJobResponse,
    JobUpdateJobError,
    ThrowOnError
  >({
    ...options,
    url: "/api/v1/job/{id}",
    responseTransformer: JobUpdateJobResponseTransformer,
  });
};

/**
 * Get Job
 */
export const jobGetJob = <ThrowOnError extends boolean = false>(
  options: Options<JobGetJobData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    JobGetJobResponse,
    JobGetJobError,
    ThrowOnError
  >({
    ...options,
    url: "/api/v1/job/{id}",
    responseTransformer: JobGetJobResponseTransformer,
  });
};

/**
 * Delete Job
 */
export const jobDeleteJob = <ThrowOnError extends boolean = false>(
  options: Options<JobDeleteJobData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    JobDeleteJobResponse,
    JobDeleteJobError,
    ThrowOnError
  >({
    ...options,
    url: "/api/v1/job/{id}",
    responseTransformer: JobDeleteJobResponseTransformer,
  });
};

/**
 * Create Conformational B Prediction
 */
export const predictionCreateConformationalBPrediction = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PredictionCreateConformationalBpredictionData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PredictionCreateConformationalBpredictionResponse,
    PredictionCreateConformationalBpredictionError,
    ThrowOnError
  >({
    ...options,
    url: "/api/v1/prediction/conformational-b/",
    responseTransformer:
      PredictionCreateConformationalBpredictionResponseTransformer,
  });
};
