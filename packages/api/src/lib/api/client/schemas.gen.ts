// This file is auto-generated by @hey-api/openapi-ts

export const ClassificationResultSchema = {
  properties: {
    label: {
      type: "string",
      title: "Label",
    },
    score: {
      type: "number",
      title: "Score",
    },
  },
  type: "object",
  required: ["label", "score"],
  title: "ClassificationResult",
} as const;

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
      type: "array",
      title: "Detail",
    },
  },
  type: "object",
  title: "HTTPValidationError",
} as const;

export const HealthCheckResponseSchema = {
  properties: {
    message: {
      type: "string",
      title: "Message",
    },
    batches_processed: {
      type: "integer",
      title: "Batches Processed",
    },
    title: {
      type: "string",
      title: "Title",
    },
    content: {
      type: "string",
      title: "Content",
    },
    transcript: {
      type: "string",
      title: "Transcript",
    },
  },
  type: "object",
  required: ["message", "batches_processed", "title", "content", "transcript"],
  title: "HealthCheckResponse",
} as const;

export const PredictRequestSchema = {
  properties: {
    inputs: {
      type: "string",
      title: "Inputs",
    },
  },
  type: "object",
  required: ["inputs"],
  title: "PredictRequest",
} as const;

export const PredictionResponseSchema = {
  properties: {
    results: {
      items: {
        $ref: "#/components/schemas/ClassificationResult",
      },
      type: "array",
      title: "Results",
    },
  },
  type: "object",
  required: ["results"],
  title: "PredictionResponse",
} as const;

export const UnauthorizedErrorResponseSchema = {
  properties: {
    detail: {
      type: "string",
      title: "Detail",
    },
  },
  type: "object",
  required: ["detail"],
  title: "UnauthorizedErrorResponse",
} as const;

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
      type: "array",
      title: "Location",
    },
    msg: {
      type: "string",
      title: "Message",
    },
    type: {
      type: "string",
      title: "Error Type",
    },
  },
  type: "object",
  required: ["loc", "msg", "type"],
  title: "ValidationError",
} as const;
