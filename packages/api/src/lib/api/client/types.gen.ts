// This file is auto-generated by @hey-api/openapi-ts

export type ConformationalBPrediction = {
  job_id: string;
  id: string;
  created_at: Date;
  updated_at: Date;
  pdb_id: string;
  chain: string;
  bcr_recognition_probability_method: string;
  surface_accessibility_method: string;
  result: Array<PredictionResult>;
  csv_download_url: string | null;
};

export type ConformationalBPredictionCreate = {
  job_id: string;
  pdb_id: string;
  chain: string;
  bcr_recognition_probability_method: string;
  surface_accessibility_method: string;
  result?: Array<PredictionResult>;
};

export type ConformationalBPredictionUpdate = {
  id: string;
  result: Array<PredictionResult>;
};

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type HealthCheckResponse = {
  message: string;
  batches_processed: number;
  title: string;
  content: string;
  transcript: string;
};

export type Job = {
  profile_id: string;
  id: string;
  created_at: Date;
  updated_at: Date;
  name: string;
  type: JobType;
  status: JobStatus;
  share_token: string | null;
  conformational_b_predictions?: Array<ConformationalBPrediction>;
};

export type JobCreate = {
  name: string;
  type: JobType;
};

export type JobStatus = "pending" | "running" | "completed" | "failed";

export const JobStatus = {
  PENDING: "pending",
  RUNNING: "running",
  COMPLETED: "completed",
  FAILED: "failed",
} as const;

export type JobType = "linear-b" | "conformational-b" | "mhc-i" | "mhc-ii";

export const JobType = {
  LINEAR_B: "linear-b",
  CONFORMATIONAL_B: "conformational-b",
  MHC_I: "mhc-i",
  MHC_II: "mhc-ii",
} as const;

export type JobUpdate = {
  id: string;
  name?: string | null;
  type?: JobType | null;
  share_token?: string | null;
};

export type PredictionResult = {
  PDB_ID: string;
  Chain: string;
  Residue_position: number;
  AA: string;
  Epitope_score: number;
  N_glyco_label: number;
};

export type UnauthorizedErrorResponse = {
  detail: string;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type HealthCheckResponse2 = HealthCheckResponse;

export type HealthCheckError = UnauthorizedErrorResponse | unknown;

export type JobGetUserJobsResponse = Array<Job>;

export type JobGetUserJobsError = unknown;

export type JobCreateJobData = {
  body: JobCreate;
};

export type JobCreateJobResponse = Job;

export type JobCreateJobError = unknown | HTTPValidationError;

export type JobUpdateJobData = {
  body: JobUpdate;
  path: {
    id: string;
  };
};

export type JobUpdateJobResponse = Job;

export type JobUpdateJobError = unknown | HTTPValidationError;

export type JobGetJobData = {
  path: {
    id: string;
  };
};

export type JobGetJobResponse = Job;

export type JobGetJobError = unknown | HTTPValidationError;

export type JobDeleteJobData = {
  path: {
    id: string;
  };
};

export type JobDeleteJobResponse = Job;

export type JobDeleteJobError = unknown | HTTPValidationError;

export type ConformationalBpredictionCreateConformationalBpredictionData = {
  body: ConformationalBPredictionCreate;
};

export type ConformationalBpredictionCreateConformationalBpredictionResponse =
  ConformationalBPrediction;

export type ConformationalBpredictionCreateConformationalBpredictionError =
  | unknown
  | HTTPValidationError;

export type ConformationalBpredictionGetConformationalBpredictionData = {
  path: {
    id: string;
  };
};

export type ConformationalBpredictionGetConformationalBpredictionResponse =
  ConformationalBPrediction;

export type ConformationalBpredictionGetConformationalBpredictionError =
  | unknown
  | HTTPValidationError;

export type ConformationalBpredictionUpdateConformationalBpredictionData = {
  body: ConformationalBPredictionUpdate;
  path: {
    id: string;
  };
};

export type ConformationalBpredictionUpdateConformationalBpredictionResponse =
  ConformationalBPrediction;

export type ConformationalBpredictionUpdateConformationalBpredictionError =
  | unknown
  | HTTPValidationError;

export type ConformationalBpredictionDeleteConformationalBpredictionData = {
  path: {
    id: string;
  };
};

export type ConformationalBpredictionDeleteConformationalBpredictionResponse =
  ConformationalBPrediction;

export type ConformationalBpredictionDeleteConformationalBpredictionError =
  | unknown
  | HTTPValidationError;

export type JobGetUserJobsResponseTransformer = (
  data: any,
) => Promise<JobGetUserJobsResponse>;

export type JobModelResponseTransformer = (data: any) => Job;

export type ConformationalBPredictionModelResponseTransformer = (
  data: any,
) => ConformationalBPrediction;

export const ConformationalBPredictionModelResponseTransformer: ConformationalBPredictionModelResponseTransformer =
  (data) => {
    if (data?.created_at) {
      data.created_at = new Date(data.created_at);
    }
    if (data?.updated_at) {
      data.updated_at = new Date(data.updated_at);
    }
    return data;
  };

export const JobModelResponseTransformer: JobModelResponseTransformer = (
  data,
) => {
  if (data?.created_at) {
    data.created_at = new Date(data.created_at);
  }
  if (data?.updated_at) {
    data.updated_at = new Date(data.updated_at);
  }
  if (Array.isArray(data?.conformational_b_predictions)) {
    data.conformational_b_predictions.forEach(
      ConformationalBPredictionModelResponseTransformer,
    );
  }
  return data;
};

export const JobGetUserJobsResponseTransformer: JobGetUserJobsResponseTransformer =
  async (data) => {
    if (Array.isArray(data)) {
      data.forEach(JobModelResponseTransformer);
    }
    return data;
  };

export type JobCreateJobResponseTransformer = (
  data: any,
) => Promise<JobCreateJobResponse>;

export const JobCreateJobResponseTransformer: JobCreateJobResponseTransformer =
  async (data) => {
    JobModelResponseTransformer(data);
    return data;
  };

export type JobUpdateJobResponseTransformer = (
  data: any,
) => Promise<JobUpdateJobResponse>;

export const JobUpdateJobResponseTransformer: JobUpdateJobResponseTransformer =
  async (data) => {
    JobModelResponseTransformer(data);
    return data;
  };

export type JobGetJobResponseTransformer = (
  data: any,
) => Promise<JobGetJobResponse>;

export const JobGetJobResponseTransformer: JobGetJobResponseTransformer =
  async (data) => {
    JobModelResponseTransformer(data);
    return data;
  };

export type JobDeleteJobResponseTransformer = (
  data: any,
) => Promise<JobDeleteJobResponse>;

export const JobDeleteJobResponseTransformer: JobDeleteJobResponseTransformer =
  async (data) => {
    JobModelResponseTransformer(data);
    return data;
  };

export type ConformationalBpredictionCreateConformationalBpredictionResponseTransformer =
  (
    data: any,
  ) => Promise<ConformationalBpredictionCreateConformationalBpredictionResponse>;

export const ConformationalBpredictionCreateConformationalBpredictionResponseTransformer: ConformationalBpredictionCreateConformationalBpredictionResponseTransformer =
  async (data) => {
    ConformationalBPredictionModelResponseTransformer(data);
    return data;
  };

export type ConformationalBpredictionGetConformationalBpredictionResponseTransformer =
  (
    data: any,
  ) => Promise<ConformationalBpredictionGetConformationalBpredictionResponse>;

export const ConformationalBpredictionGetConformationalBpredictionResponseTransformer: ConformationalBpredictionGetConformationalBpredictionResponseTransformer =
  async (data) => {
    ConformationalBPredictionModelResponseTransformer(data);
    return data;
  };

export type ConformationalBpredictionUpdateConformationalBpredictionResponseTransformer =
  (
    data: any,
  ) => Promise<ConformationalBpredictionUpdateConformationalBpredictionResponse>;

export const ConformationalBpredictionUpdateConformationalBpredictionResponseTransformer: ConformationalBpredictionUpdateConformationalBpredictionResponseTransformer =
  async (data) => {
    ConformationalBPredictionModelResponseTransformer(data);
    return data;
  };

export type ConformationalBpredictionDeleteConformationalBpredictionResponseTransformer =
  (
    data: any,
  ) => Promise<ConformationalBpredictionDeleteConformationalBpredictionResponse>;

export const ConformationalBpredictionDeleteConformationalBpredictionResponseTransformer: ConformationalBpredictionDeleteConformationalBpredictionResponseTransformer =
  async (data) => {
    ConformationalBPredictionModelResponseTransformer(data);
    return data;
  };
